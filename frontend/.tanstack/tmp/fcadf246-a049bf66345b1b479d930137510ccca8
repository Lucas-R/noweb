/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as IndexRouteImport } from './pages/index'
import { Route as ServicesIndexRouteImport } from './pages/services/index'
import { Route as PrivacyPolicyIndexRouteImport } from './pages/privacy-policy/index'
import { Route as OurCareersIndexRouteImport } from './pages/our-careers/index'
import { Route as ContactUsIndexRouteImport } from './pages/contact-us/index'
import { Route as AboutUsIndexRouteImport } from './pages/about-us/index'
import { Route as TermsChar38ConditionsIndexRouteImport } from './pages/Terms-&-Conditions/index'
import { Route as PortifolioItemRouteImport } from './pages/portifolio/$item'
import { Route as PerfilUsernameRouteImport } from './pages/perfil/$username'
import { Route as PagesItemRouteImport } from './pages/pages/$item'
import { Route as BlogPostRouteImport } from './pages/blog/$post'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicesIndexRoute = ServicesIndexRouteImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyPolicyIndexRoute = PrivacyPolicyIndexRouteImport.update({
  id: '/privacy-policy/',
  path: '/privacy-policy/',
  getParentRoute: () => rootRouteImport,
} as any)
const OurCareersIndexRoute = OurCareersIndexRouteImport.update({
  id: '/our-careers/',
  path: '/our-careers/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactUsIndexRoute = ContactUsIndexRouteImport.update({
  id: '/contact-us/',
  path: '/contact-us/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutUsIndexRoute = AboutUsIndexRouteImport.update({
  id: '/about-us/',
  path: '/about-us/',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsChar38ConditionsIndexRoute =
  TermsChar38ConditionsIndexRouteImport.update({
    id: '/Terms-&-Conditions/',
    path: '/Terms-&-Conditions/',
    getParentRoute: () => rootRouteImport,
  } as any)
const PortifolioItemRoute = PortifolioItemRouteImport.update({
  id: '/portifolio/$item',
  path: '/portifolio/$item',
  getParentRoute: () => rootRouteImport,
} as any)
const PerfilUsernameRoute = PerfilUsernameRouteImport.update({
  id: '/perfil/$username',
  path: '/perfil/$username',
  getParentRoute: () => rootRouteImport,
} as any)
const PagesItemRoute = PagesItemRouteImport.update({
  id: '/pages/$item',
  path: '/pages/$item',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostRoute = BlogPostRouteImport.update({
  id: '/blog/$post',
  path: '/blog/$post',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog/$post': typeof BlogPostRoute
  '/pages/$item': typeof PagesItemRoute
  '/perfil/$username': typeof PerfilUsernameRoute
  '/portifolio/$item': typeof PortifolioItemRoute
  '/Terms-&-Conditions': typeof TermsChar38ConditionsIndexRoute
  '/about-us': typeof AboutUsIndexRoute
  '/contact-us': typeof ContactUsIndexRoute
  '/our-careers': typeof OurCareersIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/services': typeof ServicesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog/$post': typeof BlogPostRoute
  '/pages/$item': typeof PagesItemRoute
  '/perfil/$username': typeof PerfilUsernameRoute
  '/portifolio/$item': typeof PortifolioItemRoute
  '/Terms-&-Conditions': typeof TermsChar38ConditionsIndexRoute
  '/about-us': typeof AboutUsIndexRoute
  '/contact-us': typeof ContactUsIndexRoute
  '/our-careers': typeof OurCareersIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/services': typeof ServicesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog/$post': typeof BlogPostRoute
  '/pages/$item': typeof PagesItemRoute
  '/perfil/$username': typeof PerfilUsernameRoute
  '/portifolio/$item': typeof PortifolioItemRoute
  '/Terms-&-Conditions/': typeof TermsChar38ConditionsIndexRoute
  '/about-us/': typeof AboutUsIndexRoute
  '/contact-us/': typeof ContactUsIndexRoute
  '/our-careers/': typeof OurCareersIndexRoute
  '/privacy-policy/': typeof PrivacyPolicyIndexRoute
  '/services/': typeof ServicesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog/$post'
    | '/pages/$item'
    | '/perfil/$username'
    | '/portifolio/$item'
    | '/Terms-&-Conditions'
    | '/about-us'
    | '/contact-us'
    | '/our-careers'
    | '/privacy-policy'
    | '/services'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog/$post'
    | '/pages/$item'
    | '/perfil/$username'
    | '/portifolio/$item'
    | '/Terms-&-Conditions'
    | '/about-us'
    | '/contact-us'
    | '/our-careers'
    | '/privacy-policy'
    | '/services'
  id:
    | '__root__'
    | '/'
    | '/blog/$post'
    | '/pages/$item'
    | '/perfil/$username'
    | '/portifolio/$item'
    | '/Terms-&-Conditions/'
    | '/about-us/'
    | '/contact-us/'
    | '/our-careers/'
    | '/privacy-policy/'
    | '/services/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogPostRoute: typeof BlogPostRoute
  PagesItemRoute: typeof PagesItemRoute
  PerfilUsernameRoute: typeof PerfilUsernameRoute
  PortifolioItemRoute: typeof PortifolioItemRoute
  TermsChar38ConditionsIndexRoute: typeof TermsChar38ConditionsIndexRoute
  AboutUsIndexRoute: typeof AboutUsIndexRoute
  ContactUsIndexRoute: typeof ContactUsIndexRoute
  OurCareersIndexRoute: typeof OurCareersIndexRoute
  PrivacyPolicyIndexRoute: typeof PrivacyPolicyIndexRoute
  ServicesIndexRoute: typeof ServicesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/services/': {
      id: '/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy-policy/': {
      id: '/privacy-policy/'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/our-careers/': {
      id: '/our-careers/'
      path: '/our-careers'
      fullPath: '/our-careers'
      preLoaderRoute: typeof OurCareersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact-us/': {
      id: '/contact-us/'
      path: '/contact-us'
      fullPath: '/contact-us'
      preLoaderRoute: typeof ContactUsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about-us/': {
      id: '/about-us/'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof AboutUsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Terms-&-Conditions/': {
      id: '/Terms-&-Conditions/'
      path: '/Terms-&-Conditions'
      fullPath: '/Terms-&-Conditions'
      preLoaderRoute: typeof TermsChar38ConditionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/portifolio/$item': {
      id: '/portifolio/$item'
      path: '/portifolio/$item'
      fullPath: '/portifolio/$item'
      preLoaderRoute: typeof PortifolioItemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/perfil/$username': {
      id: '/perfil/$username'
      path: '/perfil/$username'
      fullPath: '/perfil/$username'
      preLoaderRoute: typeof PerfilUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pages/$item': {
      id: '/pages/$item'
      path: '/pages/$item'
      fullPath: '/pages/$item'
      preLoaderRoute: typeof PagesItemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$post': {
      id: '/blog/$post'
      path: '/blog/$post'
      fullPath: '/blog/$post'
      preLoaderRoute: typeof BlogPostRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogPostRoute: BlogPostRoute,
  PagesItemRoute: PagesItemRoute,
  PerfilUsernameRoute: PerfilUsernameRoute,
  PortifolioItemRoute: PortifolioItemRoute,
  TermsChar38ConditionsIndexRoute: TermsChar38ConditionsIndexRoute,
  AboutUsIndexRoute: AboutUsIndexRoute,
  ContactUsIndexRoute: ContactUsIndexRoute,
  OurCareersIndexRoute: OurCareersIndexRoute,
  PrivacyPolicyIndexRoute: PrivacyPolicyIndexRoute,
  ServicesIndexRoute: ServicesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
